////  HiddenContainerRecognizer.swift//  Runner////  Created by Sunnatillo Shavkatov on 01/11/24.//import UIKitstruct HiddenContainerRecognizer {        private enum Error: Swift.Error {        case unsupportedOSVersion(version: Float)        case desiredContainerNotFound(_ containerName: String)    }        func getHiddenContainer(from view: UIView) throws -> UIView {        let containerName = try getHiddenContainerTypeInStringRepresentation()        let containers = view.subviews.filter { subview in            type(of: subview).description() == containerName        }                guard let container = containers.first else {            throw Error.desiredContainerNotFound(containerName)        }                return container    }        private func getHiddenContainerTypeInStringRepresentation() throws -> String {        if #available(iOS 15, *) {            return "_UITextLayoutCanvasView"        }        let currentIOSVersion = (UIDevice.current.systemVersion as NSString).floatValue        throw Error.unsupportedOSVersion(version: currentIOSVersion)    }}